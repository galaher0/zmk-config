/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp TAB               &kp Q  &kp W  &kp E               &kp R         &kp T          &kp Y        &kp U                    &kp I       &kp O    &kp P     &kp LBKT                &mt RWIN RBKT
            &mt LEFT_SHIFT MINUS  &kp A  &kp S  &kp D               &kp F         &kp G          &kp H        &kp J                    &kp K       &kp L    &kp SEMI  &mt RIGHT_SHIFT SQT
            &mt LCTRL EQUAL       &kp Z  &kp X  &kp C               &kp V         &kp B          &kp N        &kp M                    &kp COMMA   &kp DOT  &kp FSLH  &mt RIGHT_CONTROL BSLH
                                         &mo 2  &kp LA(LEFT_SHIFT)  &kp LEFT_ALT  &lt 1 ENTER    &lt 2 SPACE  &mt RIGHT_ALT BACKSPACE  &kp DELETE  &mo 1
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp GRAVE  &kp F1    &kp F2       &kp F3                                &kp F4    &kp F5       &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11                &mt RGUI F12
        &trans     &kp N1    &kp N2       &kp N3                                &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &mt RIGHT_SHIFT MINUS
        &trans     &kp EXCL  &kp AT_SIGN  &kp HASH                              &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &trans
                             &trans       &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT  &trans    &trans       &trans     &trans    &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8                 &kp KP_N9  &kp KP_MINUS    &kp INSERT     &kp HOME  &kp PSCRN         &kp PG_UP  &kp C_VOL_UP  &kp CAPS               &trans
        &trans      &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5                 &kp KP_N6  &kp KP_PLUS     &kp LEFT       &kp DOWN  &kp UP            &kp RIGHT  &kp C_VOL_DN  &mt RIGHT_SHIFT K_APP
        &trans      &kp KP_N0        &kp KP_N1  &kp KP_N2                 &kp KP_N3  &kp KP_DOT      &kp C_AC_BACK  &kp END   &kp K_PLAY_PAUSE  &kp PG_DN  &kp C_MUTE    &trans
                                     &trans     &kp C_AL_KEYBOARD_LAYOUT  &trans     &trans          &trans         &trans    &trans            &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader  &none         &none         &none         &none         &kp LC(LA(F1))    &kp K_SLEEP   &kp K_POWER   &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none             &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans            &trans        &none         &trans        &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
